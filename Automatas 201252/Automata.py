class Automata:

    def __init__(self):
        # Define los estados posibles del AFD
        self.estadosPosibles = [
            "q0 "
            "q1"
            "q2"
            "q3"
            "q4"
            "q5"
            "q6"
            "q7"
            "q8"
            "q9"
            "q10"
            "q11"
            "q12"
            "q13"
            "q14"
            "q15"
            "q16"
            "q17"
            "q18"
            "q19"
            "q20"
            "q21"
            "q22"
            "q23"
            "q24"
            "q25"
            "q26"
            "q27"
            "q28"
            "q29"
            "q30"
            "q31"
            "q32"
            "q33"
            "q34"
            "q35"
            "q36"
            "q37"
            "q38"
            "q39"
            "q40"
            "q41"
            "q42"
            "q43"
            "q44"
            "q45"
            "q46"
            "q47"
            "q48"
            "q49"
            "q50"
            "q51"
            "q52"
            "q53"
            "q54"
            "q55"
            "q56"
            "q57"
            "q58"
            "q59"
            "q60"
            "q61"
            "q62"
            "q63"
            "q64"
            "q65"
            "q66"
            "q67"
            "q68"
            "q69"
            "q70"
            "q71"
        ]

        self.estadoInicial = "q0"
        self.estadoFinal = ["q71", "q18", "q28"]
        self.transiciones = {
            ("q0", "S"): "q1",
            ("q1", "E"): "q2",
            ("q2", "L"): "q3",
            ("q3", "E"): "q4",
            ("q4", "C"): "q5",
            ("q5", "T"): "q6",
            ("q6", " "): "q9",
            ("q9", " "): "q9",
            ("q9", "*"): "q8",
            ("q8", " "): "q12",
            ("q12", " "): "q12",
            ('q9', 'a'): 'q10',
            ('q9', 'b'): 'q10',
            ('q9', 'c'): 'q10',
            ('q9', 'd'): 'q10',
            ('q9', 'e'): 'q10',
            ('q9', 'f'): 'q10',
            ('q9', 'g'): 'q10',
            ('q9', 'h'): 'q10',
            ('q9', 'i'): 'q10',
            ('q9', 'j'): 'q10',
            ('q9', 'k'): 'q10',
            ('q9', 'l'): 'q10',
            ('q9', 'm'): 'q10',
            ('q9', 'n'): 'q10',
            ('q9', 'ñ'): 'q10',
            ('q9', 'o'): 'q10',
            ('q9', 'p'): 'q10',
            ('q9', 'q'): 'q10',
            ('q9', 'r'): 'q10',
            ('q9', 's'): 'q10',
            ('q9', 't'): 'q10',
            ('q9', 'u'): 'q10',
            ('q9', 'v'): 'q10',
            ('q9', 'w'): 'q10',
            ('q9', 'x'): 'q10',
            ('q9', 'y'): 'q10',
            ('q9', 'z'): 'q10',
            ('q10', 'a'): 'q10',
            ('q10', 'b'): 'q10',
            ('q10', 'c'): 'q10',
            ('q10', 'd'): 'q10',
            ('q10', 'e'): 'q10',
            ('q10', 'f'): 'q10',
            ('q10', 'g'): 'q10',
            ('q10', 'h'): 'q10',
            ('q10', 'i'): 'q10',
            ('q10', 'j'): 'q10',
            ('q10', 'k'): 'q10',
            ('q10', 'l'): 'q10',
            ('q10', 'm'): 'q10',
            ('q10', 'n'): 'q10',
            ('q10', 'ñ'): 'q10',
            ('q10', 'o'): 'q10',
            ('q10', 'p'): 'q10',
            ('q10', 'q'): 'q10',
            ('q10', 'r'): 'q10',
            ('q10', 's'): 'q10',
            ('q10', 't'): 'q10',
            ('q10', 'u'): 'q10',
            ('q10', 'v'): 'q10',
            ('q10', 'w'): 'q10',
            ('q10', 'x'): 'q10',
            ('q10', 'y'): 'q10',
            ('q10', 'z'): 'q10',
            ('q10', ','): 'q11',
            ('q10', ' '): 'q12',
            ('q11', ' '): 'q9',
            ('q12', 'F'): 'q13',
            ('q13', 'R'): 'q14',
            ('q14', 'O'): 'q15',
            ('q15', 'M'): 'q16',
            ('q16', ' '): 'q17',
            ('q17', ' '): 'q17',
            ('q17', 'a'): 'q18',
            ('q17', 'b'): 'q18',
            ('q17', 'c'): 'q18',
            ('q17', 'd'): 'q18',
            ('q17', 'e'): 'q18',
            ('q17', 'f'): 'q18',
            ('q17', 'g'): 'q18',
            ('q17', 'h'): 'q18',
            ('q17', 'i'): 'q18',
            ('q17', 'j'): 'q18',
            ('q17', 'k'): 'q18',
            ('q17', 'l'): 'q18',
            ('q17', 'm'): 'q18',
            ('q17', 'n'): 'q18',
            ('q17', 'ñ'): 'q18',
            ('q17', 'o'): 'q18',
            ('q17', 'p'): 'q18',
            ('q17', 'q'): 'q18',
            ('q17', 'r'): 'q18',
            ('q17', 's'): 'q18',
            ('q17', 't'): 'q18',
            ('q17', 'u'): 'q18',
            ('q17', 'v'): 'q18',
            ('q17', 'w'): 'q18',
            ('q17', 'x'): 'q18',
            ('q17', 'y'): 'q18',
            ('q17', 'z'): 'q18',
            ('q18', 'a'): 'q18',
            ('q18', 'b'): 'q18',
            ('q18', 'c'): 'q18',
            ('q18', 'd'): 'q18',
            ('q18', 'e'): 'q18',
            ('q18', 'f'): 'q18',
            ('q18', 'g'): 'q18',
            ('q18', 'h'): 'q18',
            ('q18', 'i'): 'q18',
            ('q18', 'j'): 'q18',
            ('q18', 'k'): 'q18',
            ('q18', 'l'): 'q18',
            ('q18', 'm'): 'q18',
            ('q18', 'n'): 'q18',
            ('q18', 'ñ'): 'q18',
            ('q18', 'o'): 'q18',
            ('q18', 'p'): 'q18',
            ('q18', 'q'): 'q18',
            ('q18', 'r'): 'q18',
            ('q18', 's'): 'q18',
            ('q18', 't'): 'q18',
            ('q18', 'u'): 'q18',
            ('q18', 'v'): 'q18',
            ('q18', 'w'): 'q18',
            ('q18', 'x'): 'q18',
            ('q18', 'y'): 'q18',
            ('q18', 'z'): 'q18',
            ('q18', ' '): 'q19',
            ('q19', ' '): 'q19',
            ('q19', 'W'): 'q20',
            ('q20', 'H'): 'q21',
            ('q21', 'E'): 'q22',
            ('q22', 'R'): 'q23',
            ('q23', 'E'): 'q24',
            ('q24', ' '): 'q25',
            ('q25', ' '): 'q25',
            ('q25', 'a'): 'q26',
            ('q25', 'b'): 'q26',
            ('q25', 'c'): 'q26',
            ('q25', 'd'): 'q26',
            ('q25', 'e'): 'q26',
            ('q25', 'f'): 'q26',
            ('q25', 'g'): 'q26',
            ('q25', 'h'): 'q26',
            ('q25', 'i'): 'q26',
            ('q25', 'j'): 'q26',
            ('q25', 'k'): 'q26',
            ('q25', 'l'): 'q26',
            ('q25', 'm'): 'q26',
            ('q25', 'n'): 'q26',
            ('q25', 'ñ'): 'q26',
            ('q25', 'o'): 'q26',
            ('q25', 'p'): 'q26',
            ('q25', 'q'): 'q26',
            ('q25', 'r'): 'q26',
            ('q25', 's'): 'q26',
            ('q25', 't'): 'q26',
            ('q25', 'u'): 'q26',
            ('q25', 'v'): 'q26',
            ('q25', 'w'): 'q26',
            ('q25', 'x'): 'q26',
            ('q25', 'y'): 'q26',
            ('q25', 'z'): 'q26',
            ('q26', 'a'): 'q26',
            ('q26', 'b'): 'q26',
            ('q26', 'c'): 'q26',
            ('q26', 'd'): 'q26',
            ('q26', 'e'): 'q26',
            ('q26', 'f'): 'q26',
            ('q26', 'g'): 'q26',
            ('q26', 'h'): 'q26',
            ('q26', 'i'): 'q26',
            ('q26', 'j'): 'q26',
            ('q26', 'k'): 'q26',
            ('q26', 'l'): 'q26',
            ('q26', 'm'): 'q26',
            ('q26', 'n'): 'q26',
            ('q26', 'ñ'): 'q26',
            ('q26', 'o'): 'q26',
            ('q26', 'p'): 'q26',
            ('q26', 'q'): 'q26',
            ('q26', 'r'): 'q26',
            ('q26', 's'): 'q26',
            ('q26', 't'): 'q26',
            ('q26', 'u'): 'q26',
            ('q26', 'v'): 'q26',
            ('q26', 'w'): 'q26',
            ('q26', 'x'): 'q26',
            ('q26', 'y'): 'q26',
            ('q26', 'z'): 'q26',
            ('q26', '='): 'q27',
            ('q26', '<'): 'q27',
            ('q26', '>'): 'q27',
            ('q27', '='): 'q27.1',
            ('q27.1', ' '): 'q28',
            ('q27', 'a'): 'q28',
            ('q27', 'b'): 'q28',
            ('q27', 'c'): 'q28',
            ('q27', 'd'): 'q28',
            ('q27', 'e'): 'q28',
            ('q27', 'f'): 'q28',
            ('q27', 'g'): 'q28',
            ('q27', 'h'): 'q28',
            ('q27', 'i'): 'q28',
            ('q27', 'j'): 'q28',
            ('q27', 'k'): 'q28',
            ('q27', 'l'): 'q28',
            ('q27', 'm'): 'q28',
            ('q27', 'n'): 'q28',
            ('q27', 'ñ'): 'q28',
            ('q27', 'o'): 'q28',
            ('q27', 'p'): 'q28',
            ('q27', 'q'): 'q28',
            ('q27', 'r'): 'q28',
            ('q27', 's'): 'q28',
            ('q27', 't'): 'q28',
            ('q27', 'u'): 'q28',
            ('q27', 'v'): 'q28',
            ('q27', 'w'): 'q28',
            ('q27', 'x'): 'q28',
            ('q27', 'y'): 'q28',
            ('q27', 'z'): 'q28',
            ('q27', '0'): 'q28',
            ('q27', '1'): 'q28',
            ('q27', '2'): 'q28',
            ('q27', '3'): 'q28',
            ('q27', '4'): 'q28',
            ('q27', '5'): 'q28',
            ('q27', '6'): 'q28',
            ('q27', '7'): 'q28',
            ('q27', '8'): 'q28',
            ('q27', '9'): 'q28',
            ('q28', 'a'): 'q28',
            ('q28', 'b'): 'q28',
            ('q28', 'c'): 'q28',
            ('q28', 'd'): 'q28',
            ('q28', 'e'): 'q28',
            ('q28', 'f'): 'q28',
            ('q28', 'g'): 'q28',
            ('q28', 'h'): 'q28',
            ('q28', 'i'): 'q28',
            ('q28', 'j'): 'q28',
            ('q28', 'k'): 'q28',
            ('q28', 'l'): 'q28',
            ('q28', 'm'): 'q28',
            ('q28', 'n'): 'q28',
            ('q28', 'ñ'): 'q28',
            ('q28', 'o'): 'q28',
            ('q28', 'p'): 'q28',
            ('q28', 'q'): 'q28',
            ('q28', 'r'): 'q28',
            ('q28', 's'): 'q28',
            ('q28', 't'): 'q28',
            ('q28', 'u'): 'q28',
            ('q28', 'v'): 'q28',
            ('q28', 'w'): 'q28',
            ('q28', 'x'): 'q28',
            ('q28', 'y'): 'q28',
            ('q28', 'z'): 'q28',
            ('q28', '0'): 'q28',
            ('q28', '1'): 'q28',
            ('q28', '2'): 'q28',
            ('q28', '3'): 'q28',
            ('q28', '4'): 'q28',
            ('q28', '5'): 'q28',
            ('q28', '6'): 'q28',
            ('q28', '7'): 'q28',
            ('q28', '8'): 'q28',
            ('q28', '9'): 'q28',
            ('q0', 'D'): 'q29',
            ('q29', 'E'): 'q30',
            ('q30', 'L'): 'q31',
            ('q31', 'E'): 'q32',
            ('q32', 'T'): 'q33',
            ('q33', 'E'): 'q34',
            ('q34', ' '): 'q12',
            ('q34', ' '): 'q37',
            ('q37', ' '): 'q37',
            ('q37', 'a'): 'q38',
            ('q37', 'b'): 'q38',
            ('q37', 'c'): 'q38',
            ('q37', 'd'): 'q38',
            ('q37', 'e'): 'q38',
            ('q37', 'f'): 'q38',
            ('q37', 'g'): 'q38',
            ('q37', 'h'): 'q38',
            ('q37', 'i'): 'q38',
            ('q37', 'j'): 'q38',
            ('q37', 'k'): 'q38',
            ('q37', 'l'): 'q38',
            ('q37', 'm'): 'q38',
            ('q37', 'n'): 'q38',
            ('q37', 'ñ'): 'q38',
            ('q37', 'o'): 'q38',
            ('q37', 'p'): 'q38',
            ('q37', 'q'): 'q38',
            ('q37', 'r'): 'q38',
            ('q37', 's'): 'q38',
            ('q37', 't'): 'q38',
            ('q37', 'u'): 'q38',
            ('q37', 'v'): 'q38',
            ('q37', 'w'): 'q38',
            ('q37', 'x'): 'q38',
            ('q37', 'y'): 'q38',
            ('q37', 'z'): 'q38',
            ('q38', 'a'): 'q38',
            ('q38', 'b'): 'q38',
            ('q38', 'c'): 'q38',
            ('q38', 'd'): 'q38',
            ('q38', 'e'): 'q38',
            ('q38', 'f'): 'q38',
            ('q38', 'g'): 'q38',
            ('q38', 'h'): 'q38',
            ('q38', 'i'): 'q38',
            ('q38', 'j'): 'q38',
            ('q38', 'k'): 'q38',
            ('q38', 'l'): 'q38',
            ('q38', 'm'): 'q38',
            ('q38', 'n'): 'q38',
            ('q38', 'ñ'): 'q38',
            ('q38', 'o'): 'q38',
            ('q38', 'p'): 'q38',
            ('q38', 'q'): 'q38',
            ('q38', 'r'): 'q38',
            ('q38', 's'): 'q38',
            ('q38', 't'): 'q38',
            ('q38', 'u'): 'q38',
            ('q38', 'v'): 'q38',
            ('q38', 'w'): 'q38',
            ('q38', 'x'): 'q38',
            ('q38', 'y'): 'q38',
            ('q38', 'z'): 'q38',
            ('q38', ' '): 'q19',
            ('q0', 'I'): 'q40',
            ('q40', 'N'): 'q41',
            ('q41', 'S'): 'q42',
            ('q42', 'E'): 'q43',
            ('q43', 'R'): 'q44',
            ('q44', 'T'): 'q45',
            ('q45', ' '): 'q46',
            ('q46', ' '): 'q46', #espacio inser into
            ('q46', 'I'): 'q47',
            ('q47', 'N'): 'q48',
            ('q48', 'T'): 'q49',
            ('q49', 'O'): 'q50',
            ('q50', ' '): 'q51',
            ('q51', ' '): 'q51',
            ('q51', 'a'): 'q52',
            ('q51', 'b'): 'q52',
            ('q51', 'c'): 'q52',
            ('q51', 'd'): 'q52',
            ('q51', 'e'): 'q52',
            ('q51', 'f'): 'q52',
            ('q51', 'g'): 'q52',
            ('q51', 'h'): 'q52',
            ('q51', 'i'): 'q52',
            ('q51', 'j'): 'q52',
            ('q51', 'k'): 'q52',
            ('q51', 'l'): 'q52',
            ('q51', 'm'): 'q52',
            ('q51', 'n'): 'q52',
            ('q51', 'ñ'): 'q52',
            ('q51', 'o'): 'q52',
            ('q51', 'p'): 'q52',
            ('q51', 'q'): 'q52',
            ('q51', 'r'): 'q52',
            ('q51', 's'): 'q52',
            ('q51', 't'): 'q52',
            ('q51', 'u'): 'q52',
            ('q51', 'v'): 'q52',
            ('q51', 'w'): 'q52',
            ('q51', 'x'): 'q52',
            ('q51', 'y'): 'q52',
            ('q51', 'z'): 'q52',
            ('q52', 'a'): 'q52',
            ('q52', 'b'): 'q52',
            ('q52', 'c'): 'q52',
            ('q52', 'd'): 'q52',
            ('q52', 'e'): 'q52',
            ('q52', 'f'): 'q52',
            ('q52', 'g'): 'q52',
            ('q52', 'h'): 'q52',
            ('q52', 'i'): 'q52',
            ('q52', 'j'): 'q52',
            ('q52', 'k'): 'q52',
            ('q52', 'l'): 'q52',
            ('q52', 'm'): 'q52',
            ('q52', 'n'): 'q52',
            ('q52', 'ñ'): 'q52',
            ('q52', 'o'): 'q52',
            ('q52', 'p'): 'q52',
            ('q52', 'q'): 'q52',
            ('q52', 'r'): 'q52',
            ('q52', 's'): 'q52',
            ('q52', 't'): 'q52',
            ('q52', 'u'): 'q52',
            ('q52', 'v'): 'q52',
            ('q52', 'w'): 'q52',
            ('q52', 'x'): 'q52',
            ('q52', 'y'): 'q52',
            ('q52', 'z'): 'q52',
            ('q52', ' '): 'q53',
            ('q53', ' '): 'q53',
            ('q53', '('): 'q54',
            ('q54', 'a'): 'q55',
            ('q54', 'b'): 'q55',
            ('q54', 'c'): 'q55',
            ('q54', 'd'): 'q55',
            ('q54', 'e'): 'q55',
            ('q54', 'f'): 'q55',
            ('q54', 'g'): 'q55',
            ('q54', 'h'): 'q55',
            ('q54', 'i'): 'q55',
            ('q54', 'j'): 'q55',
            ('q54', 'k'): 'q55',
            ('q54', 'l'): 'q55',
            ('q54', 'm'): 'q55',
            ('q54', 'n'): 'q55',
            ('q54', 'ñ'): 'q55',
            ('q54', 'o'): 'q55',
            ('q54', 'p'): 'q55',
            ('q54', 'q'): 'q55',
            ('q54', 'r'): 'q55',
            ('q54', 's'): 'q55',
            ('q54', 't'): 'q55',
            ('q54', 'u'): 'q55',
            ('q54', 'v'): 'q55',
            ('q54', 'w'): 'q55',
            ('q54', 'x'): 'q55',
            ('q54', 'y'): 'q55',
            ('q54', 'z'): 'q55',
            ('q55', 'a'): 'q55',
            ('q55', 'b'): 'q55',
            ('q55', 'c'): 'q55',
            ('q55', 'd'): 'q55',
            ('q55', 'e'): 'q55',
            ('q55', 'f'): 'q55',
            ('q55', 'g'): 'q55',
            ('q55', 'h'): 'q55',
            ('q55', 'i'): 'q55',
            ('q55', 'j'): 'q55',
            ('q55', 'k'): 'q55',
            ('q55', 'l'): 'q55',
            ('q55', 'm'): 'q55',
            ('q55', 'n'): 'q55',
            ('q55', 'ñ'): 'q55',
            ('q55', 'o'): 'q55',
            ('q55', 'p'): 'q55',
            ('q55', 'q'): 'q55',
            ('q55', 'r'): 'q55',
            ('q55', 's'): 'q55',
            ('q55', 't'): 'q55',
            ('q55', 'u'): 'q55',
            ('q55', 'v'): 'q55',
            ('q55', 'w'): 'q55',
            ('q55', 'x'): 'q55',
            ('q55', 'y'): 'q55',
            ('q55', 'z'): 'q55',
            ('q55', ','): 'q56',
            ('q56', ' '): 'q54',
            ('q54', ' '): 'q54',
            ('q55', ')'): 'q57',
            ('q57', ' '): 'q58',
            ('q58', ' '): 'q58',
            ('q58', 'V'): 'q59',
            ('q59', 'A'): 'q60',
            ('q60', 'L'): 'q61',
            ('q61', 'U'): 'q62',
            ('q62', 'E'): 'q63',
            ('q63', 'S'): 'q64',
            ('q64', ' '): 'q65',
            ('q65', ' '): 'q65',
            ('q65', '('): 'q66',
            ('q66', '"'): 'q67',
            ('q67', 'a'): 'q68',
            ('q67', 'b'): 'q68',
            ('q67', 'c'): 'q68',
            ('q67', 'd'): 'q68',
            ('q67', 'e'): 'q68',
            ('q67', 'f'): 'q68',
            ('q67', 'g'): 'q68',
            ('q67', 'h'): 'q68',
            ('q67', 'i'): 'q68',
            ('q67', 'j'): 'q68',
            ('q67', 'k'): 'q68',
            ('q67', 'l'): 'q68',
            ('q67', 'm'): 'q68',
            ('q67', 'n'): 'q68',
            ('q67', 'ñ'): 'q68',
            ('q67', 'o'): 'q68',
            ('q67', 'p'): 'q68',
            ('q67', 'q'): 'q68',
            ('q67', 'r'): 'q68',
            ('q67', 's'): 'q68',
            ('q67', 't'): 'q68',
            ('q67', 'u'): 'q68',
            ('q67', 'v'): 'q68',
            ('q67', 'w'): 'q68',
            ('q67', 'x'): 'q68',
            ('q67', 'y'): 'q68',
            ('q67', 'z'): 'q68',
            ('q67', '0'): 'q68',
            ('q67', '1'): 'q68',
            ('q67', '2'): 'q68',
            ('q67', '3'): 'q68',
            ('q67', '4'): 'q68',
            ('q67', '5'): 'q68',
            ('q67', '6'): 'q68',
            ('q67', '7'): 'q68',
            ('q67', '8'): 'q68',
            ('q67', '9'): 'q68',
            ('q68', 'a'): 'q68',
            ('q68', 'b'): 'q68',
            ('q68', 'c'): 'q68',
            ('q68', 'd'): 'q68',
            ('q68', 'e'): 'q68',
            ('q68', 'f'): 'q68',
            ('q68', 'g'): 'q68',
            ('q68', 'h'): 'q68',
            ('q68', 'i'): 'q68',
            ('q68', 'j'): 'q68',
            ('q68', 'k'): 'q68',
            ('q68', 'l'): 'q68',
            ('q68', 'm'): 'q68',
            ('q68', 'n'): 'q68',
            ('q68', 'ñ'): 'q68',
            ('q68', 'o'): 'q68',
            ('q68', 'p'): 'q68',
            ('q68', 'q'): 'q68',
            ('q68', 'r'): 'q68',
            ('q68', 's'): 'q68',
            ('q68', 't'): 'q68',
            ('q68', 'u'): 'q68',
            ('q68', 'v'): 'q68',
            ('q68', 'w'): 'q68',
            ('q68', 'x'): 'q68',
            ('q68', 'y'): 'q68',
            ('q68', 'z'): 'q68',
            ('q68', '0'): 'q68',
            ('q68', '1'): 'q68',
            ('q68', '2'): 'q68',
            ('q68', '3'): 'q68',
            ('q68', '4'): 'q68',
            ('q68', '5'): 'q68',
            ('q68', '6'): 'q68',
            ('q68', '7'): 'q68',
            ('q68', '8'): 'q68',
            ('q68', '9'): 'q68',
            ('q68', '"'): 'q69',
            ('q69', ','): 'q70',
            ('q70', ' '): 'q66',
            ('q66', ' '): 'q66',
            ('q69', ')'): 'q71',
        }

    def Automata(self, a):

        Actual = self.estadoInicial

        for symbol in a:
            Actual = self.transiciones.get((Actual, symbol))
            print(Actual)
            print(symbol)
            if Actual is None:
                return False

        if Actual in self.estadoFinal:
            print(self.estadoFinal)
            return True
        else:
            return False


automata = Automata()
